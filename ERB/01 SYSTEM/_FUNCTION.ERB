;===============================================
; ○ 설명
; 여러가지 함수를 저장하는 곳, eratohoK에서 뜯어옴
;
;===============================================
;-------------------------------------------------
; 한 줄로 선을 긋는 함수
;-------------------------------------------------
@SINGLE_DRAWLINE(LINE = "-", COLOR = -1)
#DIM COLOR
#DIM COLOR_TMP
#DIMS LINE
#DIMS TMP

COLOR_TMP = GETCOLOR()
SIF COLOR != -1
	SETCOLOR COLOR

TMP '= HTML_GETPRINTEDSTR(0)
;STRFIND는 정규 표현에 대응하고 있지 않아서 이런 일을 하는 처지가 된다
;실제의 정규 표현 처리에 걸치기까지 한 번 이스케이프를 먹는 것 같은 것으로 슬래시는 이중으로 건네줄 필요가 있다.
IF FINDELEMENT(TMP, "([^ ])\\1{15}", 0, 1, 0) == 0
	RETURN
ELSE
	DRAWLINEFORM %LINE%
ENDIF

SIF COLOR != -1
	SETCOLOR COLOR_TMP

;-------------------------------------------------
;네／아니오의 선택지를 표시해 입력 결과를 돌려주는 함수
;인수 0=긍정 선택지의 문자열, 1=부정 선택지의 문자열
;반환값 0=네, 1=아니오
;-------------------------------------------------
@ASK_YN(AR:0 = "  네  ", AR:1 = "아니오")
#DIMS AR, 2
#DIM LOC
CURRENTREDRAW
LOC = RESULT
REDRAW 0
PRINTBUTTON @" 0[%AR:0%]", 0
PRINTL 
PRINTBUTTON @" 1[%AR:1%]", 1
PRINTL 
$INPUT_LOOP
INPUT
IF RESULT != 0 && RESULT != 1
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
REDRAW LOC
RETURN RESULT


@YEAR_DATE_SHOW()
#DIM SEASON_INDEX
#DIM YEAR
#DIMS SEASON
#DIM DAY_IN_SEASON
#DIMS TTIME
#DIMS ADDTEXT
;==============================
; 달력 정보 계산
;==============================

; 1년차 계산 (DAY 1~120 = 1년차)
YEAR = (DAY - 1) / 120 + 1

PRINTFORM {YEAR}년 

; 계절 인덱스 계산 (0=봄, 1=여름, 2=가을, 3=겨울)
SEASON_INDEX = ((DAY - 1) / 30) % 4

FONTBOLD
; 계절 이름 문자열 설정
IF SEASON_INDEX == 0
    SEASON = 봄
	SETCOLOR 0XE97777
ELSEIF SEASON_INDEX == 1
    SEASON = 여름
	SETCOLOR 0X2A9D8F
ELSEIF SEASON_INDEX == 2
    SEASON = 가을
	SETCOLOR 0XE9C46A
ELSE
    SEASON = 겨울
	SETCOLOR 0XA8DADC
ENDIF

PRINTFORM %SEASON%
RESETCOLOR
FONTREGULAR
PRINTFORM 의 

; 계절 내 날짜 (1~30)
DAY_IN_SEASON = (DAY - 1) % 30 + 1

PRINTFORM {DAY_IN_SEASON}일({DAY}일차)
; 시간대 설정 (0=아침, 1=밤)
FONTBOLD
IF FLAG:밤낮 == 0
    TTIME = 아침☀️
	SETCOLOR 0XFFD166
ELSE
    TTIME = 밤🌙
	SETCOLOR 0X3A506B
ENDIF
PRINTFORM  %TTIME%
FONTREGULAR
RESETCOLOR

RETURN